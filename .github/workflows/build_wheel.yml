name: Create Python wheel using Conda

on:
  push:
    branches: [ master ]

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}-latest

    strategy:
      matrix:
        os: [ 'ubuntu', 'macos', 'windows' ]
        python-version: [ '3.8', '3.9', '3.10' ]

    steps:

      - name: Checkout project
        uses: actions/checkout@v2

      # See https://cibuildwheel.readthedocs.io/en/stable/
      # Not usable for now, because cadquery libraries require glibc 2.31,
      # but the manylinux images have been created only up to 2.24 (as of 2022-04-11).
      # - name: Build wheels
      #   uses: pypa/cibuildwheel@v2.4.0
      #   with:
      #     output-dir: dist

      # see https://github.com/marketplace/actions/setup-miniconda
      - name: Setup Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-version: latest
          activate-environment: ocp-vtk
          python-version: ${{ matrix.python-version }}
          channels: conda-forge

      - name: Print info
        shell: bash -l {0}
        run: |
          conda info
          conda list --explicit

      - name: Print licenses
        if: matrix.os == 'ubuntu'
        run: |
          grep '"license":' $CONDA/conda-meta/*.json | sed -e 's/.*\/conda-meta\/\(.*-.*\)-.*"license": "\(.*\)".*/\1: \2/'

      - name: Build wheel
        shell: bash -l {0}
        run: |
          conda install -n ocp-vtk -y ocp=7.5.3.0
          pip install --upgrade pip
          pip install build setuptools wheel requests auditwheel delocate delvewheel
          python -m build --no-isolation

      - name: Test wheel
        shell: bash -l {0}
        run: |
          pip install 'git+https://github.com/CadQuery/cadquery' ezdxf multimethod nlopt nptyping typish
          python -c "import cadquery; cadquery.Workplane('XY').box(1,2,3).toSvg()"

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ocp-vtk_${{ matrix.os }}-cp${{ matrix.python-version }}
          path: dist/

      # see https://github.com/marketplace/actions/pypi-publish
      - name: Publish to PyPI
        # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        if: matrix.os == 'windows'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
